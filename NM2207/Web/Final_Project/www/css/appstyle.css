html, body
{
	height: 98%;
	width: 98%;
	background-color: #EBCFB2;

}


h2 {color:#424B54;
	font-size: 24px;
	user-select: none;
	text-align: center;
  font-family: 'Courier New';
  font-weight: bolder;
}

p{
  font-size: 14px
}

/*container elements*/

.container {
  line-height: 15.4px;
  height:95%;
  width:95%;
  

}



/*formatting each element*/
.header
{
  font-size: 24px; font-style: normal; 
  font-variant: normal; 
  font-weight: 700; 
}

.sidebar {
  background-color: #EBCFB2;
}

#instructions{
  font-family:'Courier New';
  font-size: 24;
  font-weight: bold;
}

/* Typically, you wouldn't specify a height or min-height on this, 
instead allowing your actual content (i.e., text, images, etc.) to 
dictate the height of your content area. But since this example has
very minimal content, I've set a min-height to mimic a taller content area. */
.startPage {
  min-height: 20%;
  color: white
}

.container > * {
  margin-bottom: 2%;
}
/* Now let's apply grid for wider viewports. */
@media screen and (min-width: 40em) {
  .container > * {
    margin-bottom: 0;

  }
  /* Define the grid */
  .container {
    display: grid;
    grid-template-columns: 22% 60% 24%;
    grid-template-rows: 10% auto 0.4%;
  }
  /* Place items on the grid */
  .header {
    grid-column: 1 / span 3;

  }

  .startPage{
    background-color: DarkSalmon;

  }

  .sidebar {
    grid-row-end: span 1;
  }
  .startPage {
    grid-column: 2;
  }
  .footer {
    grid-column: 1 / span 3;
  }

}






